---
# This section is for exposing log files
- name: FILE; web accessible directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop: 
    - "{{ NGINX_ERROR_HTML_DIR }}"
    - "{{ NGINX_APP_LOG_HTML_DIR }}"

- name: APT; install nginx for Ubuntu
  apt:
    name: 
    - nginx
    - apache2-utils
    state: latest
    update_cache: yes
  register: apt_result
  until: apt_result is not failed
  retries: 30
  delay: 10

- name: PIP; upgrade pip
  pip:
    name: pip
    state: latest
    executable: pip3

- name: PIP; upgrade other dependencies
  pip:
    name: passlib
    state: latest
    executable: pip3

- name: HTPASSWD; add NGINX_AUTH_USER
  community.general.htpasswd:
    path: "{{ NGINX_BASICAUTH_PASSWORD_FILE }}"
    name: "{{ NGINX_AUTH_USER}}"
    password: "{{ NGINX_AUTH_PASS }}"
    mode: 0666

- name: TEMPLATE; install new default template
  ansible.builtin.template:
    src: "nginx-default-{{ NGINX_AUTH_TYPE }}.j2"
    dest: "/etc/nginx/sites-enabled/default"
  notify:
    - Restart nginx

- name: TEMPLATE; install custom 502 error page
  ansible.builtin.template:
    src: "502.html.j2"
    dest: "{{ NGINX_ERROR_HTML_DIR }}/502.html"

# this block will expose log files via web
# but will ignore errors if they are not found
- block:
  - name: FILE; set permissions on the log file, but not change the parent directories
    file:
      path: "{{ item }}"
      mode: 0644
    loop: "{{ NGINX_APP_LOG_FILES }}"
    ignore_errors: true

  - name: SHELL; create a symbolic link
    shell: ln -s "{{ item }}" "{{ item | basename }}"
    args:
      chdir: "{{ NGINX_APP_LOG_HTML_DIR }}"
    loop: "{{ NGINX_APP_LOG_FILES }}"
    ignore_errors: true
  when: NGINX_APP_LOG_FILES is defined and NGINX_APP_LOG_FILES|length > 0

- block:
  - name: COPY; create the token file in NGINX_TOKEN_PATH
    ansible.builtin.copy:
      content: |
        {{ NGINX_API_TOKEN }}
      dest: "{{ NGINX_TOKEN_PATH }}"
      mode: 0644

  - name: COPY; create an motd with token value 
    ansible.builtin.copy:
      dest: "/etc/motd"
      mode: 0644
      content: |
        Welcome!

        HTTP Token: {{ NGINX_API_TOKEN }}
        Token is also stored in {{ NGINX_TOKEN_PATH }}

        HTTP service is running at {{ NGINX_PUBLIC_ENDPOINT }}

        An example on how to access an api using curl in query param:

          curl {{ NGINX_PUBLIC_ENDPOINT }}?{{ NGINX_API_TOKEN_KEY | lower }}={{ NGINX_API_TOKEN }}
        
        An example on how to access api using curl with token in header:

          curl -H "X-{{ NGINX_API_TOKEN_KEY }}:{{ NGINX_API_TOKEN }}" {{ NGINX_PUBLIC_ENDPOINT }}

  when: NGINX_AUTH_TYPE == "apitoken"

- block:
  - name: COPY; create the basic auth file in NGINX_USERPASS_PATH
    ansible.builtin.copy:
      content: |
        {{ NGINX_AUTH_USER }} {{ NGINX_AUTH_PASS }}
      dest: "{{ NGINX_USERPASS_PATH }}"
      mode: 0644

  - name: COPY; create an motd with token value 
    ansible.builtin.copy:
      dest: "/etc/motd"
      mode: 0644
      content: |
        Welcome!

        HTTP User: {{ NGINX_AUTH_USER }}
        HTTP Pass: {{ NGINX_AUTH_PASS}}
        Token is also stored in  {{ NGINX_USERPASS_PATH }}

        {%- if NGINX_PUBLIC_ENDPOINT is defined and NGINX_PUBLIC_ENDPOINT != "" -%}
        HTTP service is running at {{ NGINX_PUBLIC_ENDPOINT }}

        {%- endif -%}

  when: NGINX_AUTH_TYPE == "basicauth"

